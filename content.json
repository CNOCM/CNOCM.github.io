{"meta":{"title":"CNOCM","subtitle":"","description":"宁静致远","author":"CNOCM","url":"https://cnocm.github.io","root":"/"},"pages":[{"title":"关于","date":"2023-08-28T07:46:54.083Z","updated":"2023-08-28T07:46:54.083Z","comments":true,"path":"about/index.html","permalink":"https://cnocm.github.io/about/index.html","excerpt":"","text":"正在施工…"},{"title":"","date":"2023-08-28T06:46:52.201Z","updated":"2023-08-28T06:46:52.201Z","comments":true,"path":"404.html","permalink":"https://cnocm.github.io/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"所有标签","date":"2023-08-28T06:49:25.204Z","updated":"2023-08-28T06:49:25.204Z","comments":true,"path":"tags/index.html","permalink":"https://cnocm.github.io/tags/index.html","excerpt":"","text":"正在施工…"},{"title":"所有分类","date":"2023-08-28T06:49:22.730Z","updated":"2023-08-28T06:49:22.730Z","comments":true,"path":"categories/index.html","permalink":"https://cnocm.github.io/categories/index.html","excerpt":"","text":"正在施工…"},{"title":"","date":"2023-08-28T07:18:07.686Z","updated":"2023-08-28T07:18:07.686Z","comments":true,"path":"friends/index.html","permalink":"https://cnocm.github.io/friends/index.html","excerpt":"","text":"正在施工…"}],"posts":[{"title":"git clone加速","slug":"为git添加代理","date":"2023-08-24T04:49:39.000Z","updated":"2023-08-28T08:34:35.561Z","comments":true,"path":"posts/27210/","link":"","permalink":"https://cnocm.github.io/posts/27210/","excerpt":"","text":"当在克隆或从远程仓库获取数据时，很可能因为网络状况不佳遇到很慢甚至超时的情况，那么此时您可能需要配置 Git 的代理。 第一种：使用镜像站最常见 GitHub 镜像地址：https://gitclone.com/https://hub.fastgit.org/https://github.com.cnpmjs.org/访问上面的镜像网站，网站的内容跟 GitHub 是完整同步的镜像，然后在这个网站里面进行下载克隆等操作。举个栗子： git clone https://github.com/microsoft/vscode.git替换为 ：git clone https://gitclone.com/github.com/microsoft/vscode 第二种 设置git参数12git config --global url.&quot;https://gitclone.com/&quot;.insteadOf https://git clone https://github.com/microsoft/vscode.git 第三种 使用cgit工具下载链接：https://github.com/git-cloner/gitcache/releases 1cgit clone https://github.com/microsoft/vscode.git 第四种 使用本地代理12345678# 设置代理git config --global http.proxy &lt;protocol&gt;://&lt;host&gt;:&lt;port&gt;*--glboal 选项指的是修改 Git 的全局配置文件 ~/.gitconfig（而非各个 Git 仓库里的配置文件 .git/config）。*&lt;protocol&gt; 指的是代理协议，如 http，https，socks5 等。*&lt;host&gt; 为代理主机，如使用本地代理主机 127.0.0.1 或 localhost 等。*&lt;port&gt; 则为代理端口号，如 clash 使用的 7890 或 7891 等。# 取消代理git config --global --unset http.proxy","categories":[],"tags":[],"author":"CNOCM"},{"title":"记录使用Python登录某大学教务系统","slug":"教务系统登录模拟","date":"2023-06-25T04:49:39.000Z","updated":"2023-08-28T08:34:35.563Z","comments":true,"path":"posts/18252/","link":"","permalink":"https://cnocm.github.io/posts/18252/","excerpt":"","text":"本文章仅用作于学习 背景：最近期末到来，想第一时间看到新出成绩的，但教务系统处必须得等到学期结束才能看到，于是就有了想到爬取学校教务系统来获取自己的成绩，目前完成了模拟登录的阶段。 因为大部分网站都可以通过CAS进行授权登录，所以只要登录了，就可以方便地完成一些机械化的操作。可以导出课表、成绩单、抢课。 之后有时间的话，可以补充一些真正有用的应用。 目录 - 新教务系统 - 教务系统 新教务系统分析登录请求首先进入新教务系统首页，打开F12，输入账号密码进行测试。提交的表单数据如下： 可以看到，username就是学号，password不是密码的明文，可能是经过了哈希或者加密，authcode是图片验证码，_eventId 应该是提交的意思，而最长的execution看不出有什么含义。通过查看网页源代码，可以看到登录表单中有一项 就是execution的内容，可以看出，每次请求页面的时候会返回execution，在登录时带着这一项提交，作用可能是防止csrf攻击（猜的）。 那么就只剩下密码这一个参数了。如果前端通过js加密密码，必然要先从input框中先获取密码的内容，于是先找到密码框的html代码然后在source中全文搜索password关键字，发现login.js中有一段这样的代码 可以看到这段代码先进行一些字段检查，再把密码加密填写回`password`，最后再执行submit提交到后台。 继续搜索加密中用到的`RSAUtils` 再观察到201行，需要传入public_exponent和Modulus作为参数，继续搜索也找到了来源，是向v2&#x2F;getPubKey发送请求后得到。 代码实现至此，整个登录的流程已经梳理清楚了，开始使用代码实现1.先访问页面并提取execution 123url = &quot;https://cas.xxx.edu.cn/lyuapServer/login&quot;response = requests.get(url)execution = re.search(&#x27;name=&quot;execution&quot; value=&quot;(.*?)&quot;&#x27;, response.text).group(1) 2.获取图片验证码 12345678910111213def get_qrcode(): url = &quot;https://cas.xxx.edu.cn/lyuapServer/kaptcha&quot; try: response = requests.get(url) if response.status_code == 200: save_path = &quot;captcha.png&quot; with open(save_path, &#x27;wb&#x27;) as file: file.write(response.content) print(&quot;图片已保存：&quot;, save_path) else: print(&quot;无法获取图片：&quot;, url) except Exception as e: print(&quot;错误：&quot;, e) 3获取密码加密需要的参数及加密密码 1234567891011121314151617181920def get_public_key(): url = &quot;https://cas.xxx.edu.cn/lyuapServer/v2/getPubKey&quot; try: response = requests.get(url) data = response.json() modulus = data[&#x27;modulus&#x27;] exponent = data[&#x27;exponent&#x27;] return modulus, exponent except requests.exceptions.RequestException as e: print(&quot;Error: &quot;, e)modulus, public_exponent = get_public_key()def encrypt_password(public_exponent, modulus, password): password_bytes = bytes(password, &#x27;ascii&#x27;) password_int = int.from_bytes(password_bytes, &#x27;big&#x27;) e_int = int(public_exponent, 16) m_int = int(modulus, 16) result_int = pow(password_int, e_int, m_int) return hex(result_int)[2:].rjust(128, &#x27;0&#x27;) 4.发送登录请求 12345678data = &#123; &#x27;username&#x27;: username, &#x27;password&#x27;: encrypted_password, &#x27;authcode&#x27;: authcode, &#x27;execution&#x27;: execution, &#x27;_eventId&#x27;: &#x27;submit&#x27;&#125;response = requests.post(url, data=data) 然而多次尝试后都无法登录，遂暂时放弃此方法。 旧教务系统偶然发现在教务系统退出后会被重定向到旧版的教务系统处，似乎所有强智教务都有这个入口。","categories":[],"tags":[],"author":"CNOCM"}],"categories":[],"tags":[]}